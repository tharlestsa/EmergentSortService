// HTTPProxy
//
// Proxy that monitors response time from HTTPHandlers
//
// Author: Roberto Rodrigues Filho
// February @ 2017
const char debugMSG[] = "[@HTTPProxy]"

component provides http.handler.GET.HTTPGET, monitoring.BeingMonitored requires io.Output out, 
	http.handler.GET.HTTPGET, monitoring.Container {

	static Container monitor

	implementation BeingMonitored {
		Event[] BeingMonitored:getEvents() {
			if (monitor == null) { monitor = new Container() }
			return monitor.getEvents()
		}

		Metric[] BeingMonitored:getMetrics() {
			if (monitor == null) { monitor = new Container() }
			return monitor.getMetrics()
		}
	
		void BeingMonitored:turnMonitorOn() {
			if (monitor == null) { monitor = new Container() }
			monitor.turnMonitorOn()
		}

		void BeingMonitored:turnMonitorOff() {
			if (monitor == null) { monitor = new Container() }
			monitor.turnMonitorOff()
		}
	}

	implementation HTTPGET {
		void HTTPGET:handleRequest(HTTPMessage httpHeader) {
			if (monitor == null) {
				monitor = new Container()
				monitor.turnMonitorOn()
			}

			//TODO... metric and collection...
			
			
			HTTPGET httpGET = new HTTPGET()
			httpGET.handleRequest(httpHeader)
			
			//TODO... metric and event collection

			
			monitor.addMetric("metric_example", 1, false)
			monitor.addEvent("event_example", 1)
		}
	}
}
