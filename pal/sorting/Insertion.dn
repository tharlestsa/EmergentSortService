component provides sorting.Insertion requires
    io.Output out,
    data.IntUtil iu {

        int[] Insertion:sort(int array[]){

            int key = 0
            int j = 0

            for (int i = 1; i < array.arrayLength; i++) {
                key = array[i]
                j = i-1
                out.println("$(iu.intToString(array[i]))")
                /* Move elements of array[0..i-1], that are
                   greater than key, to one position ahead
                   of their current position */
                while (j >= 0 && array[j] > key) {
                    array[j+1] = array[j]
                    j = j-1
                }
                array[j+1] = key
            }

            return array
        }

        void Insertion:print(int array[]){
            out.println("")
            for(int i = 0; i < array.arrayLength; i++){
                out.println("$(iu.intToString(array[i]))")
            }
            out.println("")
        }

    }
