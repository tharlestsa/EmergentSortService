
component provides App requires io.File, io.FileSystem fileSystem, net.TCPSocket,
                                io.Output out, data.IntUtil intUtil, time.Timer timeT, data.json.JSONParser parser{


    char[] getFileData(char file_name[])
    {
        //char c[] = intUtil.intToString(i)
        //char file_name[] = "./data/nomes.json"

        File fd = new File(file_name, File.FILE_ACCESS_READ)
        char content[] = fd.read(fd.getSize())
        fd.close()

        return content
    }

    int App:main(AppParam params[]){

        TCPSocket server = new TCPSocket()
        int i=0
        while(true){
            server.connect("localhost", 2019)

            char content[] = getFileData(params[0].string)
    /*
            "./data/nomes.json"
            out.println("des-Ordenado:")
            out.println("")

            for(int i=0; i<content.arrayLength; i++)
            {
                out.println("$(content[i])")
            } */

            //server.send(getJsonFromFile())
            server.send(new char[](content, "\r"))

            server.disconnect()
            //timeT.sleep(10000)
            i++
        }
        return 0
    }




}
